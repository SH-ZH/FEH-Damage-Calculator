/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;


public class FEHCalcGUI extends javax.swing.JFrame {

    /**
     * Creates new form test
     */
    public FEHCalcGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adeptRadioGroup = new javax.swing.ButtonGroup();
        defTerrainRadioGroup = new javax.swing.ButtonGroup();
        weaponTriangleRadioGroup = new javax.swing.ButtonGroup();
        effectiveRadioGroup = new javax.swing.ButtonGroup();
        staffRadioGroup = new javax.swing.ButtonGroup();
        adeptRadio1 = new javax.swing.JRadioButton();
        attackLabel = new javax.swing.JLabel();
        adeptRadio2 = new javax.swing.JRadioButton();
        defenseLabel = new javax.swing.JLabel();
        adeptRadio3 = new javax.swing.JRadioButton();
        attackInput = new javax.swing.JTextField();
        adeptRadioNone = new javax.swing.JRadioButton();
        defenseInput = new javax.swing.JTextField();
        calcButton = new javax.swing.JButton();
        adeptLabel = new javax.swing.JLabel();
        damageOutput = new javax.swing.JTextField();
        damageLabel = new javax.swing.JLabel();
        atkSpecialInput = new javax.swing.JComboBox<>();
        defSpecialInput = new javax.swing.JComboBox<>();
        atkSpecialLabel = new javax.swing.JLabel();
        defSpecialLabel = new javax.swing.JLabel();
        defTerrainLabel = new javax.swing.JLabel();
        defTerrainYes = new javax.swing.JRadioButton();
        defTerrainNo = new javax.swing.JRadioButton();
        weaponTriangleLabel = new javax.swing.JLabel();
        weaponTriangleAd = new javax.swing.JRadioButton();
        weaponTriangleDis = new javax.swing.JRadioButton();
        weaponTriangleNone = new javax.swing.JRadioButton();
        effectiveLabel = new javax.swing.JLabel();
        effectiveYes = new javax.swing.JRadioButton();
        effectiveNo = new javax.swing.JRadioButton();
        staffLabel = new javax.swing.JLabel();
        staffYes = new javax.swing.JRadioButton();
        staffNo = new javax.swing.JRadioButton();
        statConsideredInput = new javax.swing.JTextField();
        statConsideredLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        flatDamageUpInput = new javax.swing.JTextField();
        flatDamageDownInput = new javax.swing.JTextField();
        flatDamageUpLabel = new javax.swing.JLabel();
        flatDamageDownLabel = new javax.swing.JLabel();
        previousDamageOutput = new javax.swing.JTextField();
        previousDamageLabel = new javax.swing.JLabel();
        attackingSpecialPercentField = new javax.swing.JTextField();
        attackingSpecialPercentLabel = new javax.swing.JLabel();
        defendingSpecialPercentField = new javax.swing.JTextField();
        defendingSpecialPercentLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        adeptRadioGroup.add(adeptRadio1);
        adeptRadio1.setText("Adept 1");

        attackLabel.setLabelFor(attackInput);
        attackLabel.setText("Attack");

        adeptRadioGroup.add(adeptRadio2);
        adeptRadio2.setText("Adept 2");

        defenseLabel.setLabelFor(defenseInput);
        defenseLabel.setText("Defense");

        adeptRadioGroup.add(adeptRadio3);
        adeptRadio3.setText("Adept 3");

        adeptRadioGroup.add(adeptRadioNone);
        adeptRadioNone.setSelected(true);
        adeptRadioNone.setText("None");

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        adeptLabel.setText("Triangle Adept");

        damageOutput.setEnabled(false);

        damageLabel.setText("Damage");

        atkSpecialInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Stat added to damage", "Damage multiplied", "Def/Res reduction" }));
        atkSpecialInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atkSpecialInputActionPerformed(evt);
            }
        });

        defSpecialInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Damage Reduction" }));

        atkSpecialLabel.setLabelFor(atkSpecialInput);
        atkSpecialLabel.setText("Attacking Special");

        defSpecialLabel.setLabelFor(defSpecialInput);
        defSpecialLabel.setText("Defending Special");

        defTerrainLabel.setText("Defensive Terrain");

        defTerrainRadioGroup.add(defTerrainYes);
        defTerrainYes.setText("Yes");

        defTerrainRadioGroup.add(defTerrainNo);
        defTerrainNo.setSelected(true);
        defTerrainNo.setText("No");

        weaponTriangleLabel.setText("Weapon Triangle");

        weaponTriangleRadioGroup.add(weaponTriangleAd);
        weaponTriangleAd.setText("Advantage");

        weaponTriangleRadioGroup.add(weaponTriangleDis);
        weaponTriangleDis.setText("Disadvantage");

        weaponTriangleRadioGroup.add(weaponTriangleNone);
        weaponTriangleNone.setSelected(true);
        weaponTriangleNone.setText("None");

        effectiveLabel.setText("Effective");

        effectiveRadioGroup.add(effectiveYes);
        effectiveYes.setText("Yes");

        effectiveRadioGroup.add(effectiveNo);
        effectiveNo.setSelected(true);
        effectiveNo.setText("No");

        staffLabel.setText("Staff (without Wraithful Staff)");

        staffRadioGroup.add(staffYes);
        staffYes.setText("Yes");

        staffRadioGroup.add(staffNo);
        staffNo.setSelected(true);
        staffNo.setText("No");

        statConsideredInput.setEnabled(false);

        statConsideredLabel.setText("Stat under consideration");

        flatDamageUpLabel.setLabelFor(flatDamageUpInput);
        flatDamageUpLabel.setText("Flat damage increases");

        flatDamageDownLabel.setLabelFor(flatDamageDownInput);
        flatDamageDownLabel.setText("Flat damage reductions");

        previousDamageOutput.setEnabled(false);

        previousDamageLabel.setText("Previous damage");

        attackingSpecialPercentLabel.setText("%");

        defendingSpecialPercentLabel.setText("%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(defenseInput, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(attackInput, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(defenseLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(flatDamageDownInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(attackLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(flatDamageUpInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(weaponTriangleAd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(weaponTriangleDis)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(weaponTriangleNone)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flatDamageUpLabel)
                            .addComponent(flatDamageDownLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(defSpecialLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statConsideredInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(statConsideredLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(adeptRadio1)
                                .addGap(18, 18, 18)
                                .addComponent(adeptRadio2)
                                .addGap(18, 18, 18)
                                .addComponent(adeptRadio3)
                                .addGap(18, 18, 18)
                                .addComponent(adeptRadioNone))
                            .addComponent(adeptLabel)
                            .addComponent(atkSpecialLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(staffYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(staffNo))
                            .addComponent(staffLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(effectiveYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(effectiveNo))
                            .addComponent(effectiveLabel)
                            .addComponent(weaponTriangleLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(defTerrainYes)
                                .addGap(18, 18, 18)
                                .addComponent(defTerrainNo))
                            .addComponent(defTerrainLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(damageOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(damageLabel)
                                .addGap(83, 83, 83)
                                .addComponent(previousDamageOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(previousDamageLabel))
                            .addComponent(calcButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(defSpecialInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(defendingSpecialPercentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(atkSpecialInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(attackingSpecialPercentField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(attackingSpecialPercentLabel)
                                    .addComponent(defendingSpecialPercentLabel))))
                        .addGap(0, 50, Short.MAX_VALUE))))
            .addComponent(jSeparator1)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {damageOutput, defenseInput, previousDamageOutput, statConsideredInput});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {atkSpecialInput, defSpecialInput});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {attackInput, flatDamageDownInput, flatDamageUpInput});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {attackingSpecialPercentField, defendingSpecialPercentField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attackLabel)
                    .addComponent(attackInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatDamageUpInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatDamageUpLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defenseLabel)
                    .addComponent(defenseInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatDamageDownInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatDamageDownLabel))
                .addGap(18, 18, 18)
                .addComponent(staffLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffYes)
                    .addComponent(staffNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(effectiveLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(effectiveYes)
                    .addComponent(effectiveNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(weaponTriangleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weaponTriangleAd)
                    .addComponent(weaponTriangleDis)
                    .addComponent(weaponTriangleNone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(defTerrainLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defTerrainYes)
                    .addComponent(defTerrainNo))
                .addGap(1, 1, 1)
                .addComponent(adeptLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adeptRadio1)
                    .addComponent(adeptRadio2)
                    .addComponent(adeptRadio3)
                    .addComponent(adeptRadioNone))
                .addGap(12, 12, 12)
                .addComponent(atkSpecialLabel)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atkSpecialInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attackingSpecialPercentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attackingSpecialPercentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statConsideredInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statConsideredLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(defSpecialLabel)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defSpecialInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defendingSpecialPercentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defendingSpecialPercentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(damageOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(damageLabel)
                    .addComponent(previousDamageOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousDamageLabel))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        previousDamageOutput.setText(damageOutput.getText());
        
        int damage = damageCalculation();        
        if (damage < 0) {
            damage = 0;
        }
        
        // Output damage
        damageOutput.setText(Integer.toString(damage));
        
        System.out.println("Calculate Started");
    }//GEN-LAST:event_calcButtonActionPerformed

    private void atkSpecialInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atkSpecialInputActionPerformed
        if (atkSpecialInput.getSelectedItem().equals("Stat added to damage")) {
            statConsideredInput.setEnabled(true);
        }     
        else {
            statConsideredInput.setEnabled(false);
        }
    }//GEN-LAST:event_atkSpecialInputActionPerformed

    // For getting selected radio button
    public String getSelectedValue (ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }    
    
    // For calculating damage
    public Integer damageCalculation () {
        int attack = Integer.parseInt(attackInput.getText());
        int defense = Integer.parseInt(defenseInput.getText());
        
        
        // Effective 
        if (getSelectedValue(effectiveRadioGroup).equals("Yes")) {
            attack = (int) (attack * 1.5);
        }       
        
        
        // Checks for Adept bonus -> Weapon Triangle
        double triangleEffect = 0.2;
        if (getSelectedValue(adeptRadioGroup).equals("Adept 1")) {
            triangleEffect = 0.3;
        }
        else if (getSelectedValue(adeptRadioGroup).equals("Adept 2")) {
            triangleEffect = 0.35;
        }   
        else if (getSelectedValue(adeptRadioGroup).equals("Adept 3")) {
            triangleEffect = 0.40;
        }         
        
        if (getSelectedValue(weaponTriangleRadioGroup).equals("Advantage")) {
            attack = attack + (int)(attack * triangleEffect);
        }
        else if (getSelectedValue(weaponTriangleRadioGroup).equals("Disadvantage")) {
            attack = attack - (int)(attack * triangleEffect);
        }        
        
        
        // Defensive terrain + Special Skills that lower the Defense
        double defensiveMultiplier = 0;
        if (getSelectedValue(defTerrainRadioGroup).equals("Yes")) {
            defensiveMultiplier += 0.3;
        }   
        
        if (atkSpecialInput.getSelectedItem().equals("Def/Res reduction") && !attackingSpecialPercentField.getText().isEmpty()) {
            int statPercent = Integer.parseInt(attackingSpecialPercentField.getText());
            double statPercentasPercent = statPercent / 100.0;
            
            defensiveMultiplier -= statPercentasPercent;
        }
        
        defense = defense + (int)(defense * defensiveMultiplier);
        
        
        // Add to attack depending on Special Skill
        if (atkSpecialInput.getSelectedItem().equals("Stat added to damage")  && !attackingSpecialPercentField.getText().isEmpty() && !statConsideredInput.getText().isEmpty()) {
            int temp = Integer.parseInt(statConsideredInput.getText());
            int statPercent = Integer.parseInt(attackingSpecialPercentField.getText());
            double statPercentasPercent = statPercent / 100.0;
            attack += (int) (temp * statPercentasPercent);
        }                
        
        // Getting damage done START
        int damage = attack - defense;
        
        // Wo Dao and such damage-adding effects
        if (!(flatDamageUpInput.getText().isEmpty())) {
            damage += Integer.parseInt(flatDamageUpInput.getText());
        }
        
        // Staff - Damage / 2
        if (getSelectedValue(staffRadioGroup).equals("Yes")) {
            damage = (int)(damage * 0.5);
        }
        
        // Damage-based offensive Special Skills
        if (atkSpecialInput.getSelectedItem().equals("Damage multiplied")  && !attackingSpecialPercentField.getText().isEmpty()) {
            int statPercent = Integer.parseInt(attackingSpecialPercentField.getText());
            double statPercentasPercent = statPercent / 100.0;
            
            damage = (int)(damage * statPercentasPercent);
        }          
        
        // Damage-based defensive Special Skills
        if (defSpecialInput.getSelectedItem().equals("Damage Reduction") && !defendingSpecialPercentField.getText().isEmpty()) {
            int statPercent = Integer.parseInt(defendingSpecialPercentField.getText());
            double statPercentasPercent = statPercent / 100.0;
            
            damage = damage - (int)(damage * statPercentasPercent);
        }          
        
        // Shield Pulse and such damage-decreasing effects
        if (!(flatDamageDownInput.getText().isEmpty())) {
            damage -= Integer.parseInt(flatDamageDownInput.getText());
        }

        return damage;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FEHCalcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FEHCalcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FEHCalcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FEHCalcGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FEHCalcGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adeptLabel;
    private javax.swing.JRadioButton adeptRadio1;
    private javax.swing.JRadioButton adeptRadio2;
    private javax.swing.JRadioButton adeptRadio3;
    private javax.swing.ButtonGroup adeptRadioGroup;
    private javax.swing.JRadioButton adeptRadioNone;
    private javax.swing.JComboBox<String> atkSpecialInput;
    private javax.swing.JLabel atkSpecialLabel;
    private javax.swing.JTextField attackInput;
    private javax.swing.JLabel attackLabel;
    private javax.swing.JTextField attackingSpecialPercentField;
    private javax.swing.JLabel attackingSpecialPercentLabel;
    private javax.swing.JButton calcButton;
    private javax.swing.JLabel damageLabel;
    private javax.swing.JTextField damageOutput;
    private javax.swing.JComboBox<String> defSpecialInput;
    private javax.swing.JLabel defSpecialLabel;
    private javax.swing.JLabel defTerrainLabel;
    private javax.swing.JRadioButton defTerrainNo;
    private javax.swing.ButtonGroup defTerrainRadioGroup;
    private javax.swing.JRadioButton defTerrainYes;
    private javax.swing.JTextField defendingSpecialPercentField;
    private javax.swing.JLabel defendingSpecialPercentLabel;
    private javax.swing.JTextField defenseInput;
    private javax.swing.JLabel defenseLabel;
    private javax.swing.JLabel effectiveLabel;
    private javax.swing.JRadioButton effectiveNo;
    private javax.swing.ButtonGroup effectiveRadioGroup;
    private javax.swing.JRadioButton effectiveYes;
    private javax.swing.JTextField flatDamageDownInput;
    private javax.swing.JLabel flatDamageDownLabel;
    private javax.swing.JTextField flatDamageUpInput;
    private javax.swing.JLabel flatDamageUpLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel previousDamageLabel;
    private javax.swing.JTextField previousDamageOutput;
    private javax.swing.JLabel staffLabel;
    private javax.swing.JRadioButton staffNo;
    private javax.swing.ButtonGroup staffRadioGroup;
    private javax.swing.JRadioButton staffYes;
    private javax.swing.JTextField statConsideredInput;
    private javax.swing.JLabel statConsideredLabel;
    private javax.swing.JRadioButton weaponTriangleAd;
    private javax.swing.JRadioButton weaponTriangleDis;
    private javax.swing.JLabel weaponTriangleLabel;
    private javax.swing.JRadioButton weaponTriangleNone;
    private javax.swing.ButtonGroup weaponTriangleRadioGroup;
    // End of variables declaration//GEN-END:variables
}
